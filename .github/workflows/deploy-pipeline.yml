name: Multi-Stage Deployment Pipeline

on:
  workflow_dispatch:   # 改為手動觸發，避免自動跑三次

permissions:
  contents: write
  actions: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build project
        run: |
          echo "🏗️ Simulating build process..."
          mkdir build
          echo "Build completed at $(date)" > build/info.txt
          zip -r build.zip build
          echo "✅ Build artifact created."

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-artifact
          path: build.zip

  deploy-staging:
    runs-on: ubuntu-latest
    needs: build
    environment: staging
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: build-artifact

      - name: Deploy to Staging
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAG: ${{ vars.BUILD_TAG }}
          NOTE: ${{ vars.RELEASE_NOTE }}
        run: |
          echo "🚀 Deploying to Staging..."
          gh release create "$TAG" build.zip --notes "$NOTE"
          echo "✅ Staging release $TAG created successfully."

  deploy-production:
    runs-on: ubuntu-latest
    needs: deploy-staging
    environment: production
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: build-artifact

      - name: Deploy to Production
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAG: ${{ vars.BUILD_TAG }}
          NOTE: ${{ vars.RELEASE_NOTE }}
        run: |
          echo "🚀 Deploying to Production..."
          gh release create "$TAG" build.zip --notes "$NOTE"
          echo "✅ Production release $TAG created successfully."
