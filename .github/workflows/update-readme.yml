name: Update README Activity

on:
  workflow_dispatch:   # 手動觸發
  schedule:
    - cron: "0 * * * *"   # 每小時跑一次

permissions:
  contents: write

jobs:
  update-readme:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install @octokit/rest

      - name: Generate GitHub activity
        run: |
          echo "## 🔥 Recent Activities" > activity.md
          echo "<!--ACTIVITY-START-->" >> activity.md

          node << 'EOF'
          const { Octokit } = require("@octokit/rest");
          const fs = require("fs");

          const octokit = new Octokit({ auth: process.env.REPO_TOKEN });
          const [owner, repo] = process.env.GITHUB_REPOSITORY.split("/");

          async function main() {
            try {
              const { data: events } = await octokit.activity.listRepoEvents({
                owner,
                repo,
                per_page: 10
              });

              let log = "";
              for (const e of events) {
                if (e.type === "IssuesEvent") {
                  if (e.payload.action === "opened") {
                    log += `- 🟢 Opened issue [#${e.payload.issue.number}](${e.payload.issue.html_url}) — *${e.payload.issue.title}* (${e.payload.issue.user.login})\n`;
                  } else if (e.payload.action === "closed") {
                    log += `- 🔴 Closed issue [#${e.payload.issue.number}](${e.payload.issue.html_url}) — *${e.payload.issue.title}*\n`;
                  }
                } else if (e.type === "PullRequestEvent") {
                  if (e.payload.action === "opened") {
                    log += `- 📌 Opened PR [#${e.payload.pull_request.number}](${e.payload.pull_request.html_url}) — *${e.payload.pull_request.title}*\n`;
                  } else if (e.payload.action === "closed" && e.payload.pull_request.merged) {
                    log += `- 🎉 Merged PR [#${e.payload.pull_request.number}](${e.payload.pull_request.html_url})\n`;
                  }
                } else if (e.type === "PushEvent") {
                  log += `- 🚀 Pushed ${e.payload.commits.length} commit(s) to [${e.repo.name}](https://github.com/${e.repo.name}/commits/${e.payload.ref.replace("refs/heads/","")})\n`;
                }
              }

              fs.appendFileSync("activity.md", log || "- ℹ️ No recent activity.\n");
            } catch (err) {
              console.error("Error fetching events:", err);
              process.exit(1);
            }
          }
          main();
          EOF

          echo "<!--ACTIVITY-END-->" >> activity.md

          awk 'BEGIN{start=0} /<!--ACTIVITY-START-->/ {print; while((getline line < "activity.md") > 0) print line; start=1; next} /<!--ACTIVITY-END-->/ {if(!start) print} !/<!--ACTIVITY-START-->/ && !/<!--ACTIVITY-END-->/' README.md > README.new
          mv README.new README.md

      - name: Commit changes
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add README.md
          git commit -m "chore: update GitHub activity" || echo "No changes to commit"
          git push
        env:
          REPO_TOKEN: ${{ secrets.REPO_TOKEN }}
